// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`snapshot after fetching data 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "white",
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "white",
          "elevation": 5,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "shadowColor": "black",
          "shadowOpacity": 0.2,
          "shadowRadius": 5,
          "zIndex": 100,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 60,
          "paddingHorizontal": 16,
        }
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "minWidth": 50,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <Image
            source={1}
            style={
              Object {
                "margin": 4,
                "tintColor": "#EC632B",
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "alignSelf": "stretch",
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            Object {
              "color": "black",
              "fontSize": 20,
              "fontWeight": "bold",
              "left": 50,
              "position": "absolute",
              "right": 50,
              "textAlign": "center",
            }
          }
        >
          Home
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-end",
            "minWidth": 50,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 1,
            }
          }
          testID="logoutButton"
        >
          <Image
            source={1}
            style={
              Object {
                "margin": 4,
                "tintColor": "#EC632B",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
  <RCTScrollView
    contentContainerStyle={
      Array [
        Object {
          "flexGrow": 1,
          "paddingBottom": 0,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
        },
        undefined,
      ]
    }
    data={
      Array [
        Object {
          "body": "provident occaecati excepturi optio reprehenderit quia et suscipit
suscipit recusandae consequuntur expedita et cum
reprehenderit molestiae ut ut quas totam
nostrum rerum est autem sunt rem eveniet architecto",
          "id": 1,
          "title": "sunt aut facere repellat ",
          "userId": 1,
        },
        Object {
          "body": "est rerum tempore vitae
sequi sint nihil reprehenderit dolor beatae ea dolores neque
fugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis
qui aperiam non debitis possimus qui neque nisi nulla",
          "id": 2,
          "title": "qui est esse",
          "userId": 1,
        },
        Object {
          "body": " repellat qui ipsa sit aut et iusto sed quo iure
voluptatem occaecati omnis eligendi aut ad
voluptatem doloribus vel accusantium quis pariatur
molestiae porro eius odio et labore et velit aut",
          "id": 3,
          "title": "ea molestias quasi exercitationem",
          "userId": 1,
        },
        Object {
          "body": "ullam et saepe reiciendis voluptatem adipisci
sit amet autem assumenda provident rerum culpa
quis hic commodi nesciunt rem tenetur doloremque ipsam iure
quis sunt voluptatem rerum illo velit",
          "id": 4,
          "title": "eum et est occaecati",
          "userId": 1,
        },
        Object {
          "body": "repudiandae veniam quaerat sunt sed
alias aut fugiat sit autem sed est
voluptatem omnis possimus esse voluptatibus quis
est aut tenetur dolor neque",
          "id": 5,
          "title": "nesciunt quas odio",
          "userId": 1,
        },
        Object {
          "body": "aperiam quia ut aspernatur corporis harum nihil quis provident sequi
mollitia nobis aliquid molestiae
perspiciatis et ea nemo ab reprehenderit accusantium quas
voluptate dolores velit et doloremque molestiae",
          "id": 6,
          "title": "dolorem eum magni eos",
          "userId": 1,
        },
        Object {
          "body": "dolore placeat quibusdam ea quo vitae
magni quis enim qui quis quo nemo aut saepe
quidem repellat excepturi ut quia
sunt ut sequi eos ea sed quas",
          "id": 7,
          "title": "magnam facilis autem",
          "userId": 1,
        },
        Object {
          "body": "dignissimos aperiam dolorem qui eum
facilis quibusdam animi sint suscipit qui sint possimus cum
quaerat magni maiores excepturi
ipsam ut commodi dolor voluptatum modi aut vitae",
          "id": 8,
          "title": "dolorem dolore est ipsam",
          "userId": 1,
        },
        Object {
          "body": "tempora et accusantium consectetur animi nesciunt iure dolore
enim quia ad
veniam autem ut quam aut nobis
et est aut quod aut provident voluptas autem voluptas",
          "id": 9,
          "title": "nesciunt iure omnis dolorem",
          "userId": 1,
        },
        Object {
          "body": "quo et expedita modi cum officia vel magni
doloribus qui repudiandae
vero nisi sit
quos veniam quod sed accusamus veritatis error",
          "id": 10,
          "title": "optio molestias id quia eum",
          "userId": 1,
        },
      ]
    }
    disableVirtualization={false}
    getItem={[Function]}
    getItemCount={[Function]}
    horizontal={false}
    initialNumToRender={10}
    keyExtractor={[Function]}
    keyboardShouldPersistTaps="handled"
    maxToRenderPerBatch={10}
    onContentSizeChange={[Function]}
    onEndReachedThreshold={2}
    onLayout={[Function]}
    onMomentumScrollEnd={[Function]}
    onScroll={[Function]}
    onScrollBeginDrag={[Function]}
    onScrollEndDrag={[Function]}
    refreshControl={
      <RefreshControlMock
        onRefresh={[Function]}
        refreshing={false}
        testID="refreshControl"
      />
    }
    removeClippedSubviews={false}
    renderItem={[Function]}
    scrollEventThrottle={50}
    stickyHeaderIndices={Array []}
    testID="contentView"
    updateCellsBatchingPeriod={50}
    viewabilityConfigCallbackPairs={Array []}
    windowSize={21}
  >
    <RCTRefreshControl />
    <View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="item::1"
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#EEE",
                "borderBottomWidth": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              sunt aut facere repellat 
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="item::2"
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#EEE",
                "borderBottomWidth": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              qui est esse
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="item::3"
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#EEE",
                "borderBottomWidth": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              ea molestias quasi exercitationem
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="item::4"
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#EEE",
                "borderBottomWidth": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              eum et est occaecati
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="item::5"
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#EEE",
                "borderBottomWidth": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              nesciunt quas odio
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="item::6"
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#EEE",
                "borderBottomWidth": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              dolorem eum magni eos
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="item::7"
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#EEE",
                "borderBottomWidth": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              magnam facilis autem
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="item::8"
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#EEE",
                "borderBottomWidth": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              dolorem dolore est ipsam
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="item::9"
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#EEE",
                "borderBottomWidth": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              nesciunt iure omnis dolorem
            </Text>
          </View>
        </View>
      </View>
      <View
        onLayout={[Function]}
        style={null}
      >
        <View
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          testID="item::10"
        >
          <View
            style={
              Object {
                "backgroundColor": "white",
                "borderBottomColor": "#EEE",
                "borderBottomWidth": 1,
                "paddingHorizontal": 24,
                "paddingVertical": 16,
              }
            }
          >
            <Text
              style={
                Object {
                  "fontSize": 16,
                  "fontWeight": "bold",
                }
              }
            >
              optio molestias id quia eum
            </Text>
          </View>
        </View>
      </View>
    </View>
  </RCTScrollView>
</View>
`;

exports[`snapshot before fetching data 1`] = `
<View
  style={
    Array [
      Object {
        "backgroundColor": "white",
        "flex": 1,
      },
      undefined,
    ]
  }
>
  <View
    style={
      Array [
        Object {
          "backgroundColor": "white",
          "elevation": 5,
          "paddingLeft": 0,
          "paddingRight": 0,
          "paddingTop": 0,
          "shadowColor": "black",
          "shadowOpacity": 0.2,
          "shadowRadius": 5,
          "zIndex": 100,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "height": 60,
          "paddingHorizontal": 16,
        }
      }
    >
      <View
        onLayout={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "minWidth": 50,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 1,
            }
          }
        >
          <Image
            source={1}
            style={
              Object {
                "margin": 4,
                "tintColor": "#EC632B",
              }
            }
          />
        </View>
      </View>
      <View
        style={
          Object {
            "alignSelf": "stretch",
            "flex": 1,
            "justifyContent": "center",
            "paddingVertical": 8,
          }
        }
      >
        <Text
          numberOfLines={1}
          style={
            Object {
              "color": "black",
              "fontSize": 20,
              "fontWeight": "bold",
              "left": 50,
              "position": "absolute",
              "right": 50,
              "textAlign": "center",
            }
          }
        >
          Home
        </Text>
      </View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "flex-end",
            "minWidth": 50,
          }
        }
      >
        <View
          accessible={true}
          focusable={true}
          hitSlop={
            Object {
              "bottom": 8,
              "left": 8,
              "right": 8,
              "top": 8,
            }
          }
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "flexDirection": "row",
              "justifyContent": "center",
              "opacity": 1,
            }
          }
          testID="logoutButton"
        >
          <Image
            source={1}
            style={
              Object {
                "margin": 4,
                "tintColor": "#EC632B",
              }
            }
          />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#EEE",
        "flexGrow": 1,
        "justifyContent": "center",
      }
    }
  >
    <Text
      style={
        Object {
          "color": "#999",
          "fontSize": 16,
          "fontWeight": "bold",
          "marginTop": 16,
          "textAlign": "center",
        }
      }
    >
      You don't have anything to do
    </Text>
    <View
      accessible={true}
      focusable={true}
      hitSlop={
        Object {
          "bottom": 8,
          "left": 8,
          "right": 8,
          "top": 8,
        }
      }
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#EC632B",
          "borderRadius": 8,
          "flexDirection": "row",
          "justifyContent": "center",
          "marginTop": 16,
          "opacity": 1,
          "padding": 8,
        }
      }
    >
      <Text
        numberOfLines={1}
        style={
          Object {
            "color": "white",
            "fontSize": 16,
            "fontWeight": "bold",
            "margin": 4,
          }
        }
      >
        Reload
      </Text>
    </View>
  </View>
</View>
`;
